let rejects,readFile,writeFile,resolve;_e7d‍.x([["default",()=>_e7d‍.o]]);_e7d‍.w("assert",[["rejects",["rejects"],function(v){rejects=v}]]);_e7d‍.w("fs",[["readFile",["readFile"],function(v){readFile=v}],["writeFile",["writeFile"],function(v){writeFile=v}]]);_e7d‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);



function createRepository (name) {
    const path = resolve(__dirname, `../../../data/${name}.json`);

    return {
        read: () =>
            new Promise((resolve, reject) => {
                readFile(path, (error, data) => {
                    if(error) {
                        reject(error);
                        return;
                    }

                    resolve(JSON.parse(data));
                });
            }),
        write: (data) =>
            new Promise((resolve, reject) => {
                writeFile(path, JSON.stringify(data), (error) => {
                    if(error) {
                        reject(error);
                        return;
                    }

                    resolve();
                });
            })
    }
}

_e7d‍.d(createRepository);